df <- data.frame(name = names, lon = gc$lon, lat = gc$lat,count=cjucityfor$외국인)
cen <- c(mean(df$lon), mean(df$lat))
map <- get_googlemap(center = cen,
maptype = 'roadmap',
zoom = 10)
df
cjutown <- read.xlsx("2018 제주도 읍면동별_세대_및_인구.xlsx", sheetIndex=1, encoding="UTF-8")
df <- data.frame(name = names, lon = gc$lon, lat = gc$lat,count=cjutownfor$외국인)
cen <- c(mean(df$lon), mean(df$lat))
map <- get_googlemap(center = cen,
maptype = 'roadmap',
zoom = 10)
df
df1 <- data.frame(name = names, lon = gc$lon, lat = gc$lat,count=cjutownfor$외국인)
cen <- c(mean(df$lon), mean(df$lat))
map <- get_googlemap(center = cen,
maptype = 'roadmap',
zoom = 10)
df1
ggmap(map) +
geom_point(data = df1,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(10,24)) +
geom_text(data = df,
aes(x = lon-0.1, y = lat), # 텍스트 위치
size = 5, # 텍스트 크기
label = df$count) # 텍스트 이름
ggmap(map) +
geom_point(data = df1,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(1,14)) +
geom_text(data = df,
aes(x = lon-0.1, y = lat), # 텍스트 위치
size = 5, # 텍스트 크기
label = df$count) # 텍스트 이름
ggmap(map) +
geom_point(data = df1,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(1,14)) +
geom_text(data = df,
aes(x = lon, y = lat), # 텍스트 위치
size = 5, # 텍스트 크기
label = df$name) # 텍스트 이름
ggmap(map) +
geom_point(data = df1,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(1,14)) +
geom_text(data = df,
aes(x = lon, y = lat), # 텍스트 위치
size = 2, # 텍스트 크기
label = df$name) # 텍스트 이름
map <- get_googlemap(center = cen,
maptype = 'roadmap',
zoom = 11)
ggmap(map) +
geom_point(data = df1,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(1,14)) +
geom_text(data = df,
aes(x = lon, y = lat), # 텍스트 위치
size = 2, # 텍스트 크기
label = df$name) # 텍스트 이름
map <- get_googlemap(center = cen,
maptype = 'roadmap',
zoom = 9)
map <- get_googlemap(center = cen,
maptype = 'roadmap',
zoom = 9)
ggmap(map) +
geom_point(data = df1,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(1,14)) +
geom_text(data = df,
aes(x = lon, y = lat), # 텍스트 위치
size = 2, # 텍스트 크기
label = df$name) # 텍스트 이름
cen <- c(33.698274, 126.463464)
map <- get_googlemap(center = cen,
maptype = 'roadmap',
zoom = 9)
df1
ggmap(map) +
geom_point(data = df1,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(1,14)) +
geom_text(data = df,
aes(x = lon, y = lat), # 텍스트 위치
size = 2, # 텍스트 크기
label = df$name) # 텍스트 이름
ggmap(map) +
geom_point(data = df1,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(1,14))
ggmap(map) +
geom_point(data = df1,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(1,14))
map <- get_googlemap(center = cen,
maptype = 'roadmap',
zoom = 9)
ggmap(map) +
geom_point(data = df1,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(1,14))
# 제주도 읍면동별 외국인 인구수 treemap
library(treemap)
# 제주도 읍면동별 외국인 인구수 treemap
library(treemap)
df1
cjutownfor
str(cjutownfor)
st <- data.frame(state.x77)
st <- data.frame(st, stname = rownames(st))
st
cjutownfor
cjutown
cjutown2 <- cjutownfor[-1,]
cjutown2
cjutown2 <- cjutownfor[-1,]
cjutownfor
cjutown
cjutown2 <- cjutown[-1,]; cjutown2
cjutown2 <- cjutown[,-1]; cjutown2
cjutown2 <- cjutown[-c(1,2,29),-1]; cjutown2
foreignrate <- cjutown2$외국인 / cjutown2$제주.인구
foreignrate <- cjutown2$외국인/cjutown2$제주.인구
foreignrate
cjutown3 <- cbind(cjutown2, foreignrate)
cjutown3 <- cbind(cjutown2, foreignrate); cjutown3
library(treemap)
st <- data.frame(state.x77)
st <- data.frame(st, stname = rownames(st))
st
cjutown3 <- cbind(cjutown2, foreignrate); cjutown3
treemap(cjutown3, index = c("행정시별.2."),
vSize = "외국인",
vColor = 'foreignrate',
type = 'value',
title = '제주도 외국인 읍면동별 외국인 인구 및 비율')
names <- c("제주시","서귀포시")
gc <- geocode(enc2utf8(names))
df <- data.frame(name = names, lon = gc$lon, lat = gc$lat)
df
cen <- c(mean(df$lon), mean(df$lat))
map <- get_googlemap(center = cen,
maptype = 'roadmap',
size=c(640,640),
marker = gc)
ggmap(map) # 제주시 서귀포시 마커 표시 지도
setwd("D:/GitHtub/BM_YounghoonKANG_R/Presentation G/191223-2")
cjucity <- read.xlsx("2018 제주도 시별_세대_및_인구.xlsx", sheetIndex=1, encoding="UTF-8")
cjucityfor <- cjucity[-1,-c(1,3,5,6)]; cjucityfor
names <- as.character(cjucityfor[,"행정시별"])
gc <- geocode(enc2utf8(names)) # enc2utf8
df <- data.frame(name = names, lon = gc$lon, lat = gc$lat,count=cjucityfor$외국인.계.)
cen <- c(mean(df$lon), mean(df$lat))
map <- get_googlemap(center = cen,
maptype = 'roadmap',
zoom = 10)
ggmap(map) +
geom_point(data = df,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(10,24)) +
geom_text(data = df,
aes(x = lon-0.1, y = lat), # 텍스트 위치
size = 5, # 텍스트 크기
label = df$count) # 텍스트 이름
# 제주도 시별 외국인 인구수 ggmap
library(ggmap)
register_google(key = 'AIzaSyCs0wxvwUGyb7GgWNhlNB4NdfnWh78c5Tg')
names <- c("제주시","서귀포시")
gc <- geocode(enc2utf8(names))
df <- data.frame(name = names, lon = gc$lon, lat = gc$lat)
df
cen <- c(mean(df$lon), mean(df$lat))
map <- get_googlemap(center = cen,
maptype = 'roadmap',
size=c(640,640),
marker = gc)
ggmap(map) # 제주시 서귀포시 마커 표시 지도
setwd("D:/GitHtub/BM_YounghoonKANG_R/Presentation G/191223-2")
cjucity <- read.xlsx("2018 제주도 시별_세대_및_인구.xlsx", sheetIndex=1, encoding="UTF-8")
cjucityfor <- cjucity[-1,-c(1,3,5,6)]; cjucityfor
names <- as.character(cjucityfor[,"행정시별"])
gc <- geocode(enc2utf8(names)) # enc2utf8
df <- data.frame(name = names, lon = gc$lon, lat = gc$lat,count=cjucityfor$외국인.계.)
cen <- c(mean(df$lon), mean(df$lat))
map <- get_googlemap(center = cen,
maptype = 'roadmap',
zoom = 10)
ggmap(map) +
geom_point(data = df,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(10,24)) +
geom_text(data = df,
aes(x = lon-0.1, y = lat), # 텍스트 위치
size = 5, # 텍스트 크기
label = df$count) # 텍스트 이름
ggmap(map) +
geom_point(data = df,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(10,24)) +
geom_text(data = df,
aes(x = lon-0.1, y = lat), # 텍스트 위치
size = 5, # 텍스트 크기
label = df$count, '명') # 텍스트 이름
ggmap(map) +
geom_point(data = df,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(10,24)) +
geom_text(data = df,
aes(x = lon-0.1, y = lat), # 텍스트 위치
size = 5, # 텍스트 크기
label = df$count, '명') # 텍스트 이름
ggmap(map) +
geom_point(data = df,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(10,24)) +
geom_text(data = df,
aes(x = lon-0.1, y = lat), # 텍스트 위치
size = 5, # 텍스트 크기
label = df$count & '명') # 텍스트 이름
ggmap(map) +
geom_point(data = df,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(10,24)) +
geom_text(data = df,
aes(x = lon-0.1, y = lat), # 텍스트 위치
size = 5, # 텍스트 크기
label = df$count & '명') # 텍스트 이름
ggmap(map) +
geom_point(data = df,
aes(x = lon, y = lat, size = count),
alpha = 0.6, color = "#F14B69") +scale_size_continuous(range=c(10,24)) +
geom_text(data = df,
aes(x = lon-0.1, y = lat), # 텍스트 위치
size = 5, # 텍스트 크기
label = df$count + '명') # 텍스트 이름
# 0~1 표준화 함수
std <- function( x ) {
result <- ( x - min( x ) ) / ( max( x ) - min( x ) )
return( result )
}
# 데이터 표준화
ds.new <- std( state.x77 )
head( ds.new )
# 군집화
fit <- kmeans( x = ds.new, centers = 5 )
fit
# 차원 축소 후 군집 시각화
library( cluster )
clusplot( ds.new, fit$cluster, color = TRUE, shade = TRUE, labels = 2, lines = 0 )
# 문1)R에서 제공하는 state.x77 데이터셋에 대해 k-평균 군집화를 실시하고 결과를 그래프로 출력하시오.
# • 군집의 수는 5로 한다.
clust <- state.x77
fit <- kmeans(x = clust, center = 5)
fit
fit$cluster
fit$centers
library(cluster) # 차원 축소 후 군집 시각화 패키지
# • state.x77은 각 변수(열)의 값들의 단위의 차이가 많이 나기 때문에 0~1 표준화를 실시한 후 군집화를 실행한다.
std <- function(x){
return(( x - min(x)) / (max(x) - min(x))) }
clust <- apply(state.x77, 2, std)
fit <- kmeans(x = state.x77, center = 5)
fit
clusplot(clust, # 군집 대상
fit$cluster, # 군집 번호
color = TRUE, # 원의 색
shade = TRUE, # 원의 빗급 표시 유무
labels = 2, # 관측값 출력 형태
lines = 1 ) # 중심선 연결 표시: 0으로 지정하면 중심선이 사라짐
# 전국-제주 체류자격별 등록 외국인
setwd("D:/GitHtub/BM_YounghoonKANG_R/Presentation G/191223-2")
c <- read.xlsx("2018 지역_및_체류자격별_등록외국인_현황.xlsx", sheetIndex=1, encoding="UTF-8")
c
# 전국-제주 체류자격별 등록 외국인
setwd("D:/GitHtub/BM_YounghoonKANG_R/Presentation G/191223-2")
c <- read.xlsx("2018 지역_및_체류자격별_등록외국인_현황.xlsx", sheetIndex=1, encoding="UTF-8")
c
foreprov <- read.xlsx("2018 지역_및_체류자격별_등록외국인_현황.xlsx", sheetIndex=1, encoding="UTF-8")
forprov
foreprov
forprov.x <- forprov="" colsums="" div="" rowsum="" rowsums="">
# 제주도 시별 외국인 인구수 ggmap
library(ggmap)
forprov.x <- x/colSums(x)
forprov.x <- prop.table(foreprov, margin=2)
foreprovx <- prop.table(foreprov, margin=2)
# 외국인 고용 지원 센터 현황
library(ggmap)
register_google(key = 'AIzaSyCs0wxvwUGyb7GgWNhlNB4NdfnWh78c5Tg')
names <- c("제주시 우리은행")
gc <- geocode(enc2utf8(names))
df <- data.frame(name = names, lon = gc$lon, lat = gc$lat)
df
cen <- c(mean(df$lon), mean(df$lat))
map <- get_googlemap(center = cen,
maptype = 'roadmap',
size=c(640,640),
marker = gc)
ggmap(map)
# 계절근로자제 농어가 고용주 애로사항
p <- c('의사소통 어려움', '월급 부담', '일을 못함')
n <- c(44.2, 33.0, 22.8)
qst <- data.frame(p,n)
qst
pieqst)
pie(qst)
qst <- data.frame(p,n)
pie(qst)
# 계절근로자제 농어가 고용주 애로사항
p <- c('의사소통 어려움', '월급 부담', '일을 못함')
n <- c(44.2, 33.0, 22.8)
qst <- data.frame(p,n)
pie(qst)
pie(n)
rownames(n) <-p
pie(n)
pie(n)
colnames(n) <-p
names(n) <-p
pie(n)
label <- paste(names(n), "\n", n/sum(n)*100)
pie(n)
label
pie(n, label = labels)
pie(n, labels = label)
label <- paste(names(n), "\n", n/sum(n)*100,pct, "%"))
label
pie(n, labels = label)
label <- paste(names(n), "\n", n/sum(n)*100,pct, "%")
label
pie(n, labels = label)
label <- paste(names(n), "\n", n/sum(n)*100, "%")
label
pie(n, labels = label)
# 계절근로자제 이탈자
nout <- c(0,2,2,18,98,120)
barplot(nout)
plot(nout)
plot(nout,type ="o")
names <- c('2015년', '2016년', '2017년', '2018년 9월말')
# 계절근로자제 이탈자
nout <- c(0,4,18,98,120)
names(season) <- c('2015년 하반기', '2016년', '2017년', '2018년 9월말')
plot(nout,type ="o")
# 계절근로자제 이탈자
nout <- c(0,4,18,98)
# 계절근로자제 입국자
season<- c(19,200,1086,2173)
names(season) <- c('2015년', '2016년', '2017년', '2018년 9월말')
# 계절근로자제 입국자
season<- c(19,200,1086,2173)
seasonyear <- c('2015년', '2016년', '2017년', '2018년 9월말')
seasoninb <- data.frame(season, seasoninb)
seasoninb <- data.frame(season, seasonyear)
ggplot(seasoninb, aes(seasonyear, season))+
geom_line(color=red)
ggplot(seasoninb, aes(seasonyear, season))+
geom_line(color="red")
# 계절근로자제 입국자
season<- c(19,200,1086,2173)
seasonyear <- c('2015년', '2016년', '2017년', '2018년 9월말')
seasoninb <- data.frame(season, seasonyear)
ggplot(seasoninb, aes(seasonyear, season))+
geom_line(color="red")
# 계절근로자제 입국자
library(ggplot2)
season<- c(19,200,1086,2173)
seasonyear <- c('2015년', '2016년', '2017년', '2018년 9월말')
seasoninb <- data.frame(season, seasonyear)
ggplot(seasoninb, aes(seasonyear, season))+
geom_line(color="red")
# 계절근로자제 입국자
library(ggplot2)
season<- c(19,200,1086,2173)
seasonyear <- c('2015년', '2016년', '2017년', '2018년 9월말')
seasoninb <- data.frame(season, seasonyear)
ggplot(seasoninb, aes(seasonyear, season))+
geom_line(color="red")
# 계절근로자제 입국자
library(ggplot2)
# 계절근로자제 입국자
library(ggplot2)
season<- c(19,200,1086,2173)
seasonyear <- c('2015년', '2016년', '2017년', '2018년 9월말')
seasoninb <- data.frame(season, seasonyear)
ggplot(seasoninb, aes(seasonyear, season))+
geom_line(color="red")
seasoninb
# 계절근로자제 입국자
library(ggplot2)
season<- c(19,200,1086,2173)
seasonyear <- c('2015년', '2016년', '2017년', '2018년 9월말')
seasoninb <- data.frame(season, seasonyear)
seasoninb
seasonyear <- c(2015,2016,2017,2018.9)
seasoninb <- data.frame(season, seasonyear)
seasoninb
ggplot(seasoninb, aes(seasonyear, season))+
geom_line(color="red")
seasoninb
season<- c(19,200,1086,2173)
seasonyear <- c(2015,2016,2017,2018.9)
seasoninb <- data.frame(season, seasonyear)
seasonyear <- c(2015,2016,2017,2018)
seasoninb <- data.frame(season, seasonyear)
seasoninb
ggplot(seasoninb, aes(seasonyear, season))+
geom_line(color="red")
ggplot(seasoninb, aes(y =seasonyear))+
geom_line(color="red")
ggplot(seasoninb, aes(y =seasonyear))+
geom_line(color="red")
names(season) <- c('2015','2016','2017','2018년 9월 말')
season
ggplot(season, aes(x =season))+
geom_line(color="red")
season<- c(19,200,1086,2173)
seasonyear <- c('2015','2016','2017','2018년 9월 말') #c(2015,2016,2017,2018)
seasoninb <- data.frame(season, seasonyear)
seasoninb
ggplot(seasoninb, aes(seasonyear, season))+
geom_line(color="red")
# 계절근로자제 이탈자
nout <- c(0,4,18,98)
names(season) <- c('2015년', '2016년', '2017년', '2018년 9월말')
plot(nout,type ="o")
# 계절근로자제 이탈자
nout <- c(0,4,18,98)
year <- c('2015년', '2016년', '2017년', '2018년 9월말')
plot(nout, year)
plot(nout, year,type ="o")
# 계절근로자제 이탈자
nout <- c(0,4,18,98)
year <- c('2015년', '2016년', '2017년', '2018년 9월말')
plot(nout, year,type ="o")
# 계절근로자제 입국자
library(ggplot2)
season<- c(19,200,1086,2173)
seasonyear <- c('2015','2016','2017','2018년 9월 말') #c(2015,2016,2017,2018)
seasoninb <- data.frame(season, seasonyear)
seasoninb
ggplot(seasoninb, aes(seasonyear, season))+
geom_line(color="red")
ggplot(seasoninb, aes(seasonyear, season))+
geom_bar(color="red")
season<- c(19,200,1086,2173)
seasonyear <- c('2015','2016','2017','2018년 9월 말') #c(2015,2016,2017,2018)
seasoninb <- data.frame(season, seasonyear)
seasoninb
ggplot(seasoninb, aes(seasonyear, season))+
geom_bar(color="red")
# 계절근로자제 입국자
library(ggplot2)
season<- c(19,200,1086,2822)
year <- c(2015, 2016, 2017, 2018)
seasoninb <- data.frame(season, year)
seasoninb
ggplot(seasoninb, aes(seasonyear, season))+
geom_bar(color="red")
ggplot(seasoninb, aes(year, season))+
geom_bar(color="red")
seasoninb
ggplot(seasoninb, aes(year, season))+
geom_bar(color="red")
year <- c(2015, 2016, 2017, 2018)
season<- c(19,200,1086,2822)
seasoninb <- data.frame(season, year)
seasoninb
ggplot(seasoninb, aes(year, season))+
geom_bar(color="red")
seasoninb
seasoninb <- data.frame(year, season)
seasoninb
ggplot(seasoninb, aes(year, season))+
geom_bar(color="red")
ggplot(seasoninb, aes(year, season))+
geom_bar(color="red")
View(seasoninb)
View(seasoninb)
ggplot(seasoninb, aes(year, season))+
geom_line(color="red")
ggplot(seasoninb, aes(year, nout))+
geom_line(color="red")
# 계절근로자제 이탈자
year <- c(2015, 2016, 2017, 2018)
nout <- c(0,4,18,93)
ggplot(seasoninb, aes(year, nout))+
geom_line(color="red")
outyear <- data.frame(year, nout)
ggplot(outyear, aes(year, nout))+
geom_line(color="red")
# 계절근로자제 이탈자
year <- c(2015, 2016, 2017, 2018)
nout <- c(0,4,18,93)
outyear <- data.frame(year, nout)
ggplot(outyear, aes(year, nout))+
geom_line(color="red")
year <- c(2015, 2016, 2017, 2018)
season<- c(19,200,1086,2822)
seasoninb <- data.frame(year, season)
seasoninb
ggplot(seasoninb, aes(year, season))+
geom_line(color="red")
탈자
year <- c(2015, 2016, 2017, 2018)
nout <- c(0,4,18,93)
outyear <- data.frame(year, nout)
ggplot(outyear, aes(year, nout))+
geom_line(color="red")
