z <- matrix(1:20, ncol = 4)
z
z <- matrix(1:20, nrow = 4, ncol = 5)
z
z <- matrix(1:20, nrow = 4, ncol = 5, byrow = T)
z
x <- 1:4
x
y <- 5:8
y
z <- matrix(1:20, nrow = 4, ncol = 5)
z
z <- matrix(1:20, nrow = 4, ncol = 5, byrow = T)
z
m1 <- cbind(x,y)
m1
m2 <- rbind(x,y)
m2
m3 <- rbind(m2,x)
m3
m4 <- cbind(z,x)
m4
#matrix에서 cell의 값 추출
z[2,3]
z[1,4]
z[2, ]
z[,4]
z[2, 1:3]
#Matrix에서 행/열에 이름 지정
score <- matrix(c(90,85,69,78,
85,96,49,95,
90,80,70,70),
nrow = 4, ncol = 3)
score
rownames(score) <- c("KANG1", "Young2", "Sonny3", "Pengsoo4")
colnames(score) <- c("English", "Thai", "German")
score
score["KANG1", "Thai"]
score["Young2", c("Thai", "German")]
score["Sonny3",]
score[, "English"]
rownames(score)
colnames(score)
colnames(score)[2]
#Data Frame 생성
city <- c("Seoul", "Tokyo", "Washington")
rank <- c(1,3,2)
city.info <- data.frame(city, rank)
city.info
name <- c("KANG","PENG","SOO")
age <- c(40, 32, 10)
gender <- factor(c("M","N","F"))
person2.info <- data.frame(name = c("KANG", "PENG","SOO"),
age = c(40,32,10),
gender = factor(c("M","N","F")),
blood.type = factor (c("O", "?","A")))
person2.info
person.info$name
person.info[person.info$name == "KANG",]
person.info[person.info$name == "KANG"] #콤마 하나 안찍으면 다르다
person.info[person.info$name == "KANG", c("name", "age")]
data()
#matrix와 data frame에서 사용하는 함수
dim(person.info) #often-used 관측치의 수와 컬럼(변수)의 수 (중요)
dim(iris)
nrow(person.info)
nrow(m3)
ncol(person.info)
ncol(m3)
head(iris) #often-used (중요)
tail(iris) #often-used(중요)
str(iris) #often-used #자료 구조 확인 (중요)
unique(iris[, 5])
table(iris[, "Species"]) #often-used 팩터타입일때ㅑ 가능. 종류별 횟수 (중요)
table(person.info[ , "blood.type"])
table(person.info[ , "gender"])
head(st)
st <- data.frame(state.x77)
str(st)
head(st)
class(st)
dim(st) #관측치50개/변수 8개
iris.m = as.matrix(iris[ , 1:4])
head(iris.m)
class(iris.m)
str(iris.m)
head(st)
Population #변수이름
attach(st) #변수이름을 직접적으로 쓸때
Population
score <- c(76,84,69,50,95,7,82,71,88,84)
which(score == 69)
which(score >=85)
#histogram: 연속형 자료의 분포를 시각화
#[연속형이라 그래프가 붙어 있음. 떨어져있는 건 막대그래프 bar chart]
#연속형 자료에서는 구간을 나누고 구간에 속한 값들의 개수를 세는 방법으로 사용
str(cars)
dist <- cars [, 2]; dist
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 0, breaks = 2) #las는 축 서식 글자방향/breaks는 막대의 수
dist <- cars [, 2]; dist
#상자그림(boxplot, 상자수염그림)
#사분위수를 시각화하여 그래프 형태로 표시
#상자그림은 하나의 그래프로 데이터의 분포형태를포함한 다양한 정보를 전달
#자료의 전반적인 분포를 이해하는데 도움
#구체적인 최소/최대/중앙값을 알기는 어렵다
boxplot(cars[, 2], main ="자동차 제동거리")
boxplot.stats(cars[, 2])
# 강영훈 1961216/191216
# 문1)state.x77 데이터셋에서 문맹률(Illiteracy)을 이용해 범죄율(Murder)을 예측하는 단순선형 회귀모델을 만드시오. 그리고 문맹률이 0.5, 1.0, 1.5일 때 범죄율을 예측하여 보시오.
state.x77
plot(Murder~Illiteracy, data=state.x77)
model <- lm(Murder~Illiteracy, as.data.frame(state.x77)); model
abline(model)
df <- data.frame(Illiteracy = c(0.5, 1.0, 1.5)); df
predict(model, df)
# 문2)trees 데이터셋에서 나무둘레(Girth)로 나무의 볼륨(Volume)을 예측하는 단선형 회귀모델을 만드시오.
# 그리고 나무 둘레가 8.5, 9.0, 9.5일 때, 나무의 볼륨(Volume)을 예측하여 보시오.
trees
plot(Volume~Girth, data=trees)
model2 <- lm(Volume~Girth, as.data.frame(trees)); model2
abline(model2)
plot(Murder~Illiteracy, data=state.x77)
model <- lm(Murder~Illiteracy, as.data.frame(state.x77)); model
abline(model)
plot(Volume~Girth, data=trees)
model2 <- lm(Volume~Girth, as.data.frame(trees)); model2
abline(model2)
df2 <- data.frame(Girth = c(8.5, 9.0, 9.5)); df2
predict(model2, df2)
df2 <- data.frame(Girth = c(8.5, 9.0, 9.5, 18)); df2
predict(model2, df2)
# 회귀모델 구하기
# 종속(반응) 변수~독립 (설명) 변수 순서로 지정
model <- lm(dist~speed, cars)
model
# Call:
#   lm(formula = dist ~ speed, data = cars)
#
# Coefficients:
#   (Intercept)        speed
# -17.579        3.932
# b값             w값
# y = 3.932*x - 17.579
abline(model)
# 산점도를 통한 선형관계 확인
plot(dist~speed, data = cars)
plot(cars)
# 회귀모델 구하기
# 종속(반응) 변수~독립 (설명) 변수 순서로 지정
model <- lm(dist~speed, cars)
model
# Call:
#   lm(formula = dist ~ speed, data = cars)
#
# Coefficients:
#   (Intercept)        speed
# -17.579        3.932
# b값             w값
# y = 3.932*x - 17.579
abline(model)
coef(model) # 매개변수(계수) - w, b값 출력
cars
fitted(model) # 훈련 데이터에 있는 샘플에 대한 예측값 | 회귀식의 y값
residuals(model) # 잔차: 회귀식으로 추정된 값과의 차이(오차) | 다 제곱해서 더하면 deviance
fitted.values(model)
cjucity <- read.xlsx("실업자가_구직_시_경험한_어려움의_원인_복수응답__이민자(외국인only)__20191221183406.xlsx", sheetIndex=1, encoding="UTF-8")
forejobprob <- read.xlsx("실업자가_구직_시_경험한_어려움의_원인_복수응답__이민자(외국인only)__20191221183406.xlsx", sheetIndex=1, encoding="UTF-8")
# 외국인 이민자 일자리 찾는 데 어려움 설문 조사 결과
setwd("D:/GitHtub/BM_YounghoonKANG_R/Presentation G/191223-2")
forejobprob <- read.xlsx("실업자가_구직_시_경험한_어려움의_원인_복수응답__이민자(외국인only)__20191221183406.xlsx", sheetIndex=1, encoding="UTF-8")
library(rJava)
library(xlsx)
# 외국인 이민자 일자리 찾는 데 어려움 설문 조사 결과
setwd("D:/GitHtub/BM_YounghoonKANG_R/Presentation G/191223-2")
forejobprob <- read.xlsx("실업자가_구직_시_경험한_어려움의_원인_복수응답__이민자(외국인only)__20191221183406.xlsx", sheetIndex=1, encoding="UTF-8")
# 외국인 이민자 일자리 찾는 데 어려움 설문 조사 결과
setwd("D:/GitHtub/BM_YounghoonKANG_R/Presentation G/191223-2")
# 외국인 이민자 일자리 찾는 데 어려움 설문 조사 결과
setwd("C:/GitHtub/BM_YounghoonKANG_R/Presentation G/191223-2")
# 외국인 이민자 일자리 찾는 데 어려움 설문 조사 결과
setwd("C:/GitHtub/BM_YounghoonKANG_R/Presentation G/191223-2")
# 외국인 이민자 일자리 찾는 데 어려움 설문 조사 결과
setwd("C:/GitHub/BM_YounghoonKANG_R/Presentation G/191223-2")
forejobprob <- read.xlsx("실업자가_구직_시_경험한_어려움의_원인_복수응답__이민자(외국인only)__20191221183406.xlsx", sheetIndex=1, encoding="UTF-8")
forejobprob
# 외국인 이민자 일자리 찾는 데 어려움 설문 조사 결과
setwd("C:/GitHub/BM_YounghoonKANG_R/Presentation G/191223-2")
forejobprob <- read.xlsx("실업자가_구직_시_경험한_어려움의_원인_복수응답__이민자(외국인only)__20191221183406.xlsx", sheetIndex=1, encoding="UTF-8")
forejobprob
Sys.setlocale("LC_COLLATE", "ko_KR.UTF-8")
# 외국인 이민자 일자리 찾는 데 어려움 설문 조사 결과
setwd("C:/GitHub/BM_YounghoonKANG_R/Presentation G/191223-2")
Sys.setlocale("LC_ALL","korean")
# 외국인 이민자 일자리 찾는 데 어려움 설문 조사 결과
setwd("C:/GitHub/BM_YounghoonKANG_R/Presentation G/191223-2")
forejobprob <- read.xlsx("실업자가_구직_시_경험한_어려움의_원인_복수응답__이민자(외국인only)__20191221183406.xlsx", sheetIndex=1, encoding="UTF-8")
forejobprob
View(forejobprob)
# 외국인 이민자 일자리 찾는 데 어려움 설문 조사 결과
setwd("C:/GitHub/BM_YounghoonKANG_R/Presentation G/191223-2")
forejobprob <- read.xlsx("실업자가_구직_시_경험한_어려움의_원인_복수응답__이민자(외국인only)__20191221183406.xlsx", sheetIndex=1, encoding="UTF-8")
View(forejobprob)
ggplot(df, aes(x = month, y = rain)) +
geom_bar(stat = forejobprob,
width = 0.7,
fill = "steelblue") +
ggtitle ("월별 강수량") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'red')) +
labs(x = '월', y = '강수량') +
coord_flip() #가로-세로 flip
library(ggplot2)
ggplot(df, aes(x = month, y = rain)) +
geom_bar(stat = forejobprob,
width = 0.7,
fill = "steelblue") +
ggtitle ("월별 강수량") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'red')) +
labs(x = '월', y = '강수량') +
coord_flip() #가로-세로 flip
library(ggplot2)
ggplot(forejobprob, aes(x = month, y = rain)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "steelblue") +
ggtitle ("월별 강수량") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'red')) +
labs(x = '월', y = '강수량') +
coord_flip() #가로-세로 flip
ggplot(forejobprob, aes(x = 항목, y = 외국인)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "steelblue") +
ggtitle ("월별 강수량") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'red')) +
labs(x = '월', y = '강수량') +
coord_flip() #가로-세로 flip
ggplot(forejobprob, aes(x = 항목, y = 외국인)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "steelblue") +
ggtitle ("실업자가 구직 시 경험한 어려움의 원인") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'red')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)", x = '월', y = '강수량') +
coord_flip() #가로-세로 flip
ggplot(forejobprob, aes(x = 항목, y = 외국인)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "steelblue") +
ggtitle ("실업자가 구직 시 경험한 어려움의 원인") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'red')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)", y = '%') +
coord_flip() #가로-세로 flip
ggplot(forejobprob, aes(x = 항목, y = 외국인)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "steelblue") +
ggtitle ("실업자가 구직 시 경험한 어려움의 원인") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'red')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)") +
coord_flip() #가로-세로 flip
ggplot(forejobprob) +
geom_bar(stat = "identity",
width = 0.7,
fill = "steelblue") +
ggtitle ("실업자가 구직 시 경험한 어려움의 원인") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'red')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)") +
coord_flip() #가로-세로 flip
ggplot(forejobprob, aes(x = 항목, y = 외국인)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "steelblue") +
ggtitle ("실업자가 구직 시 경험한 어려움의 원인") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'red')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)") +
coord_flip() #가로-세로 flip
ggplot(forejobprob, aes(x = 항목, y = 외국인)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "steelblue") +
ggtitle ("실업자가 구직 시 경험한 어려움의 원인") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = '')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)") +
coord_flip() #가로-세로 flip
ggplot(forejobprob, aes(x = 항목, y = 외국인)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "steelblue") +
ggtitle ("실업자가 구직 시 경험한 어려움의 원인") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold")) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)") +
coord_flip() #가로-세로 flip
Sys.setlocale("LC_ALL","korean")
# 외국인 이민자 일자리 찾는 데 어려움 설문 조사 결과
setwd("C:/GitHub/BM_YounghoonKANG_R/Presentation G/191223-2")
forejobprob <- read.xlsx("실업자가_구직_시_경험한_어려움의_원인_복수응답__이민자(외국인only)__20191221183406.xlsx", sheetIndex=1, encoding="UTF-8")
View(forejobprob)
library(ggplot2)
ggplot(forejobprob, aes(x = 항목, y = 외국인)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "steelblue") +
ggtitle ("실업자가 구직 시 경험한 어려움의 원인") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'black')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)") +
coord_flip() #가로-세로 flip
ggplot(forejobprob, aes(x = 항목, y = 외국인)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "gray") +
ggtitle ("실업자가 구직 시 경험한 어려움의 원인") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'black')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)") +
coord_flip() #가로-세로 flip
# 외국인 이민자 일자리 찾는 데 어려움 설문 조사 결과
setwd("C:/GitHub/BM_YounghoonKANG_R/Presentation G/191223-2")
forejobprob <- read.xlsx("실업자가_구직_시_경험한_어려움의_원인_복수응답__이민자(외국인only)__20191221183406.xlsx", sheetIndex=1, encoding="UTF-8")
View(forejobprob)
library(ggplot2)
ggplot(forejobprob, aes(x = 항목, y = 외국인)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "gray") +
ggtitle ("실업자가 구직 시 경험한 어려움의 원인") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'black')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)") +
coord_flip() #가로-세로 flip
ggplot(forejobprob, aes(x = 항목, y = reorder(외국인))) +
geom_bar(stat = "identity",
width = 0.7,
fill = "gray") +
ggtitle ("실업자가 구직 시 경험한 어려움의 원인") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'black')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)") +
coord_flip() #가로-세로 flip
ggplot(forejobprob, aes(x = reorder(항목, -mean_hwy), y = 외국인)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "gray") +
ggtitle ("실업자가 구직 시 경험한 어려움의 원인") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'black')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)") +
coord_flip() #가로-세로 flip
ggplot(forejobprob, aes(x = reorder(항목, -외국인), y = 외국인)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "gray") +
ggtitle ("실업자가 구직 시 경험한 어려움의 원인") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'black')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)") +
coord_flip() #가로-세로 flip
ggplot(forejobprob, aes(x = reorder(항목), y = 외국인)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "gray") +
ggtitle ("실업자가 구직 시 경험한 어려움의 원인") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'black')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)") +
coord_flip() #가로-세로 flip
ggplot(forejobprob, aes(x = reorder(항목, 외국인), y = 외국인)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "gray") +
ggtitle ("실업자가 구직 시 경험한 어려움의 원인") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'black')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)") +
coord_flip() #가로-세로 flip
foreunemp
foreunemp <- read.xlsx("실업자의 구직경로(복수응답, 외국인이민자).xlsx", sheetIndex=1, encoding="UTF-8")
foreunemp
# 실업자의 구직경로(복수응답, 외국인이민자)
Sys.setlocale("LC_ALL","korean")
setwd("C:/GitHub/BM_YounghoonKANG_R/Presentation G/191223-2")
foreunemp <- read.xlsx("실업자의 구직경로(복수응답, 외국인이민자).xlsx", sheetIndex=1, encoding="UTF-8")
foreunemp
foreunemp[1:7]
foreunemp[1:7,]
setwd("C:/GitHub/BM_YounghoonKANG_R/Presentation G/191223-2")
foreunemp <- read.xlsx("실업자의 구직경로(복수응답, 외국인이민자).xlsx", sheetIndex=1, encoding="UTF-8")
foreunemp[1:7,]
setwd("C:/GitHub/BM_YounghoonKANG_R/Presentation G/191223-2")
foreunemp <- read.xlsx("실업자의 구직경로(복수응답, 외국인이민자).xlsx", sheetIndex=1, encoding="UTF-8")
foreunemp[1:7,]
ggplot(foreunemp[1:7,], aes(x = reorder(항목, 외국인), y = 외국인)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "gray") +
ggtitle ("실업자가 구직 시 경험한 어려움의 원인") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'black')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)") +
coord_flip() #가로-세로 flip
ggplot(foreunemp[1:7,], aes(x = reorder(항목, 응답결과), y = 응답결과)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "gray") +
ggtitle ("실업자의 구직 경로") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'black')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)") +
coord_flip() #가로-세로 flip
foreunemp[1:7,]
foreunemp[1:6,]
ggplot(foreunemp[1:6,], aes(x = reorder(항목, 응답결과), y = 응답결과)) +
geom_bar(stat = "identity",
width = 0.7,
fill = "gray") +
ggtitle ("실업자의 구직 경로") + # 차트 제목
theme(plot.title = element_text(size = 25,
face = "bold",
color = 'black')) +
labs(subtitle = "(복수응답, 외국인 이민자, 2019)") +
coord_flip() #가로-세로 flip
# 전국-제주 체류자격별 등록 외국인
library(ggmap)
register_google(key = 'AIzaSyCs0wxvwUGyb7GgWNhlNB4NdfnWh78c5Tg')
gc <- geocode(enc2utf8(names))
df <- data.frame(name = names, lon = gc$lon, lat = gc$lat)
df
cen <- c(mean(df$lon), mean(df$lat))
map <- get_googlemap(center = cen,
maptype = 'roadmap',
size=c(640,640),
marker = gc)
ggmap(map) # 제주시 서귀포시 마커 표시 지도
gc <- geocode(enc2utf8(names))
# 전국-제주 체류자격별 등록 외국인
library(ggmap)
register_google(key = 'AIzaSyCs0wxvwUGyb7GgWNhlNB4NdfnWh78c5Tg')
names <- c("제주시 우리은행")
gc <- geocode(enc2utf8(names))
df <- data.frame(name = names, lon = gc$lon, lat = gc$lat)
df
cen <- c(mean(df$lon), mean(df$lat))
map <- get_googlemap(center = cen,
maptype = 'roadmap',
size=c(640,640),
marker = gc)
ggmap(map) # 제주시 서귀포시 마커 표시 지도
# 제주도 시별 외국인 인구수 ggmap
library(ggmap)
ggmap(map) # 제주시 서귀포시 마커 표시 지도
df <- data.frame(name = names, lon = gc$lon, lat = gc$lat)
df
cen <- c(mean(df$lon), mean(df$lat))
map <- get_googlemap(center = cen,
maptype = 'roadmap',
size=c(640,640),
marker = gc)
ggmap(map) # 제주시 서귀포시 마커 표시 지도
df
cen <- c(mean(df$lon), mean(df$lat))
df
cen <- c(mean(df$lon), mean(df$lat))
map <- get_googlemap(center = cen,
maptype = 'roadmap',
size=c(640,640),
marker = gc)
ggmap(map) # 제주시 서귀포시 마커 표시 지도
ggmap(map) +
ggtitle("220 ppi(dpi)")
ggmap(map)
dev.off()
ggmap(map)
dev.off()
map <- get_googlemap(center = cen,
maptype = 'roadmap',
size=c(640,640),
marker = gc)
ggmap(map)
