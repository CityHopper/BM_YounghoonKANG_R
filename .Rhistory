mutate(pop=round(pop/1000000,2)) %>%
mutate(lifeExp=round(lifeExp,1)) %>%
# Reorder countries to having big bubbles on top
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
# prepare text for tooltip
mutate(text = paste("Country: ", country, "\nPopulation (M): ", pop, "\nLife Expectancy: ", lifeExp, "\nGdp per capita: ", gdpPercap, sep="")) %>%
# Classic ggplot
ggplot( aes(x=gdpPercap, y=lifeExp, size = pop, color = continent, text=text)) +
geom_point(alpha=0.7) +
scale_size(range = c(1.4, 19), name="Population (M)") +
scale_color_viridis(discrete=TRUE, guide=FALSE) +
theme_ipsum() +
theme(legend.position="none")
# r-graph-gallery.com/index.html - GetCode - bubble (heatmap 도 많이 씀)
# Libraries
library(ggplot2)
library(dplyr)
library(plotly)
library(viridis)
library(hrbrthemes)
# r-graph-gallery.com/index.html - GetCode - bubble (heatmap 도 많이 씀)
# Libraries
library(ggplot2)
library(dplyr)
library(plotly)
library(plotly)
library(viridis)
library(hrbrthemes)
install.packages(c("gapminder", "hrbrthemes", "plotly", "viridis"))
# (4) us 데이터셋에 대해 x축은 Illiteracy(문맹률), y축은 Murder(범죄률), 원의 크기
# 는 Area(면적), 원의 색은 green(초록색), 원 내부에는 주의 이름을 표시한 버블차트
# 를 작성하시오. 또한 이 버블차트에서 관찰할 수 있는 것이 무엇인지 설명하시오.
symbols(us$Illiteracy, us$Murder,
circles = us$Area,
inches = 0.5,
bg = 'green')
text(us$Illiteracy, us$Murder,
us$states,
cex = 0.5,
col = 'navy')
#문5)R에서 제공하는 mtcars 데이터셋에서 mpg(연비)를 x축으로 하고, wt(중량)를
# y축으로 하는 산점도를 ggplot으로 작성하시오. (단, 점의 색은 gear의
# 수에 따라 다르게 표시한다.)
ggplot(mtcars, aes(x = mpg, y=wt))+
geom_point()
#문5)R에서 제공하는 mtcars 데이터셋에서 mpg(연비)를 x축으로 하고, wt(중량)를
# y축으로 하는 산점도를 ggplot으로 작성하시오. (단, 점의 색은 gear의
# 수에 따라 다르게 표시한다.)
ggplot(mtcars, aes(x = mpg, y=wt))+
geom_point(fill = gears)
geom_point(aes(fill = gears)
#문5)R에서 제공하는 mtcars 데이터셋에서 mpg(연비)를 x축으로 하고, wt(중량)를
# y축으로 하는 산점도를 ggplot으로 작성하시오. (단, 점의 색은 gear의
# 수에 따라 다르게 표시한다.)
ggplot(mtcars, aes(x = mpg, y=wt))+
geom_point(aes(fill = gears))
head(mtcars)
#문5)R에서 제공하는 mtcars 데이터셋에서 mpg(연비)를 x축으로 하고, wt(중량)를
# y축으로 하는 산점도를 ggplot으로 작성하시오. (단, 점의 색은 gear의
# 수에 따라 다르게 표시한다.)
ggplot(mtcars, aes(x = mpg, y=wt))+
geom_point(aes(fill = gear))
ggplot(mtcars, aes(x = mpg, y=wt, fill = gear ))+
geom_point()
#문5)R에서 제공하는 mtcars 데이터셋에서 mpg(연비)를 x축으로 하고, wt(중량)를
# y축으로 하는 산점도를 ggplot으로 작성하시오. (단, 점의 색은 gear의
# 수에 따라 다르게 표시한다.)
ggplot(mtcars, aes(x = mpg, y=wt))+
geom_point(aes(fill = gear))
# 문1)
# R에서 제공하는 mtcars 데이터셋에서 gear(기어의 수)에 대해 ggplot으로
# 막대그래프를 작성하시오. 단, 제목과 x축 레이블은 ‘기어의 수’, y축 레이블
# 은 ‘빈도수’로 나타내시오.
ggplot(mtcars, aes(x = gear))+
geom_bar() +
labs(x = 'number of gears', y = 'frequency')
# 문1)
# R에서 제공하는 mtcars 데이터셋에서 gear(기어의 수)에 대해 ggplot으로
# 막대그래프를 작성하시오. 단, 제목과 x축 레이블은 ‘기어의 수’, y축 레이블
# 은 ‘빈도수’로 나타내시오.
library(tidyverse)
ggplot(mtcars, aes(x = gear))+
geom_bar() +
labs(x = 'number of gears', y = 'frequency')
ggplot(mtcars, aes(x= 'mpg',
y= 'wt',
fill = gear))+
geom_point(size = 3)
=
#문1)R에서 제공하는 mtcars 데이터셋에서 gear(기어의 수)에 대해 ggplot으로
# 막대그래프를 작성하시오. 단, 제목과 x축 레이블은 ‘기어의 수’, y축 레이블
# 은 ‘빈도수’로 나타내시오.
install.packages("tidyverse")
library(tidyverse)
ggplot(mtcars, aes(x = gears)) +
geom_bar(width = 0.7,
fill = 'blue') +
ggtitle("기어의 수") +
labs(x = '기어의 수', y = '빈도수')
ggplot(mtcars, aes(x = gears)) +
geom_bar(width = 0.7,
fill = 'blue') +
ggtitle("기어의 수") +
labs(x = '기어의 수', y = '빈도수')
#문5)R에서 제공하는 mtcars 데이터셋에서 mpg(연비)를 x축으로 하고, wt(중량)를
# y축으로 하는 산점도를 ggplot으로 작성하시오. (단, 점의 색은 gear의
# 수에 따라 다르게 표시한다.)
ggplot(mtcars, aes(x = mpg, y=wt))+
geom_point(aes(fill = gear))
#문5)R에서 제공하는 mtcars 데이터셋에서 mpg(연비)를 x축으로 하고, wt(중량)를
# y축으로 하는 산점도를 ggplot으로 작성하시오. (단, 점의 색은 gear의
# 수에 따라 다르게 표시한다.)
ggplot(mtcars, aes(x = mpg, y=wt))+
geom_point(aes(color = gear))
# 문6)R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 ggplot으로 상자그림을
# 작성하되, cyl(실린더 수)에 따라 그룹을 나누어 작성하시오.
ggplot(mtcars, aes(x = cyl, y = mpg,
fill = as.factor(mtcars$cyl))) +
geom_boxplot()
library(treemap)
us$states<-rownames(us)
head(us)
# 문8)다음과 같이 데이터셋 us를 생성한 후 물음에 답하시오. 여기서 state.x77
# 은 미국 50개 주의 통계정보가, state.division은 미국 50개 주의 지역 구분
# (예: 북부, 중부, 남부……) 정보가 저장된 데이터셋이다.
us <- data.frame(state.x77, state.division);us
library(treemap)
us$states<-rownames(us)
head(us)
treemap(us,
index = c('states', 'state.division'),
vSize = 'Population',
vColor= 'Income',
type = 'value')
treemap(us,
index = c('state.division', 'states'),
vSize = 'Population',
vColor= 'Income',
type = 'value')
# (2) 미국 50개 주에 대해 각각의 주들이 지역구분별로 묶인 트리맵을 작성하시오.
# 또한, 타일의 면적은 HS.Grad(고등학교 졸업률), 타일의 색은 Murder(범죄률)로 나타
# 내고, 각각의 타일에는 주의 이름을 표시하시오. 마지막으로 이 트리맵에서 관찰할
# 수 있는 것이 무엇인지 설명하시오.
treemap(us,
index = c('state.division', 'states' ),
vSize = 'HS.Grad',
vColor= 'Murder',
type='value')
ggplot(mtcars, aes(x = gears)) +
geom_bar(width = 0.7,
fill = 'blue') +
ggtitle("기어의 수") +
labs(x = '기어의 수', y = '빈도수')
ggplot(mtcars, aes(y = gears)) +
geom_bar(width = 0.7,
fill = 'blue') +
ggtitle("기어의 수") +
labs(x = '기어의 수', y = '빈도수')
ggplot(mtcars, aes(x = gears)) +
geom_bar(stat = 'identity',width = 0.7,
fill = 'blue') +
ggtitle("기어의 수") +
labs(x = '기어의 수', y = '빈도수')
ggplot(mtcars, aes(x = gears)) +
geom_bar(stat = 'identity', width = 0.7,
fill = 'blue') +
ggtitle("기어의 수") +
labs(x = '기어의 수', y = '빈도수')
mtcars
head(mtcars)
ggplot(mtcars, aes(x = gear)) +
geom_bar(stat = 'identity', width = 0.7,
fill = 'blue') +
ggtitle("기어의 수") +
labs(x = '기어의 수', y = '빈도수')
ggplot(mtcars, aes(x = gear)) +
geom_bar(stat = 'bin', width = 0.7,
fill = 'blue') +
ggtitle("기어의 수") +
labs(x = '기어의 수', y = '빈도수')
ggplot(mtcars, aes(x = gear)) +
geom_bar( width = 0.7,
fill = 'blue') +
ggtitle("기어의 수") +
labs(x = '기어의 수', y = '빈도수')
ggplot(mtcars, aes(x = gear)) +
geom_bar( width = 0.7,
fill = 'blue') +
ggtitle("기어의 수") +
labs(x = '기어의 수', y = '빈도수')
install.packages("Rtsne")
str(mtcars)
head(mtcars)
mosaicplot(~gear + vs, #대상 변수, x축 + y축
data = mtcars, # 데이터셋
color = TRUE, # 축 변수의 그룹별 음영 다르게 표시
main = 'Gear and Vs') # 제목
mosaicplot(~gear + vs, data = mtcars,
color = c('yellow','navy'),
main = 'Gear and Vs')
tbl <- table(mtcars$gear, mtcars$vs)
tbl
mosaicplot(tbl, color = T, main = "Gear and Vs")
library(Rtsne)
library(ggplot2)
ds <- iris[,-5]
ds # 변수가 4개니까 4차원 자료
dup = which(duplicated(ds))
dup
ds <- ds[-dup,]
ds.y <- iris$Species[-dup]; ds.y
# 2차원 산점도
library(Rtsne)
library(ggplot2)
state <-as.data.frame(state.x77)
dup = which(duplicated(state))
dup
tsne <- Rtsne(state, dim = 2, perplexity = 10); tsne
dup
tsne <- Rtsne(state, dim = 2, perplexity = 10); tsne
library(mapproj)
install.packages('mapproj')
str(mtcars)
head(mtcars)
mosaicplot(~gear + vs, #대상 변수, x축 + y축
data = mtcars, # 데이터셋
color = NULL, # 축 변수의 그룹별 음영 다르게 표시
main = 'Gear and Vs') # 제목
mosaicplot(~gear + vs, #대상 변수, x축 + y축
data = mtcars, # 데이터셋
color = TRUE, # 축 변수의 그룹별 음영 다르게 표시
main = 'Gear and Vs') # 제목
# day 11
# https://www.rdocumentation.org/packages/vcd/versions/1.4-4/topics/mosaic
# Mosaic Plot
# 다중변수 범주형 데이터에 대한 각 변수의 그륩별 비율을 면적으로 표시
table(mtcars)
head(mtcars)
# day 11
# https://www.rdocumentation.org/packages/vcd/versions/1.4-4/topics/mosaic
# Mosaic Plot
# 다중변수 범주형 데이터에 대한 각 변수의 그륩별 비율을 면적으로 표시
mtcars[, c(gear, vs)]
# day 11
# https://www.rdocumentation.org/packages/vcd/versions/1.4-4/topics/mosaic
# Mosaic Plot
# 다중변수 범주형 데이터에 대한 각 변수의 그륩별 비율을 면적으로 표시
mtcars[, c('gears', 'vs')]
str(mtcars)
mtcars
# day 11
# https://www.rdocumentation.org/packages/vcd/versions/1.4-4/topics/mosaic
# Mosaic Plot
# 다중변수 범주형 데이터에 대한 각 변수의 그륩별 비율을 면적으로 표시
mtcars[, c('gear', 'vs')]
# day 11
# https://www.rdocumentation.org/packages/vcd/versions/1.4-4/topics/mosaic
# Mosaic Plot
# 다중변수 범주형 데이터에 대한 각 변수의 그륩별 비율을 면적으로 표시
table(mtcars[, c('gear', 'vs')])
# day 11
# https://www.rdocumentation.org/packages/vcd/versions/1.4-4/topics/mosaic
# Mosaic Plot
# 다중변수 범주형 데이터에 대한 각 변수의 그륩별 비율을 면적으로 표시
table(mtcars[, c('gear', 'vs','carb')])
# day 11
# https://www.rdocumentation.org/packages/vcd/versions/1.4-4/topics/mosaic
# Mosaic Plot
# 다중변수 범주형 데이터에 대한 각 변수의 그륩별 비율을 면적으로 표시
table(mtcars[, c('gear', 'vs','carb')])
# day 11
# https://www.rdocumentation.org/packages/vcd/versions/1.4-4/topics/mosaic
# Mosaic Plot
# 다중변수 범주형 데이터에 대한 각 변수의 그륩별 비율을 면적으로 표시
x<-table(mtcars[, c('gear', 'vs','carb')])
mosaicplot(x, color=TRUE)
tbl <- table(mtcars$gear, mtcars$vs)
tbl
mosaicplot(tbl, color = T, main = "Gear and Vs")
#
# break/next
#
sum <- 0
#
# break/next
#
sum <- 0
for (i in 1:10) {
sum <- sum + 1
if (i >= 5) {
break # break는 남발하지 말자
}
}
sum
sum <- 0
for ( i in 1:10){
if (i %% 2 == 0){
next
}
sum <- sum + i
}
sum
sum <- 0
for ( i in 1:10){
if (i %% 2 == 0){
next
}
sum <- sum + i
}
sum
#산술 내장 함수
log(10) + 5 #로그
log(2)
log(3)
max(5,3,2)
min(3,9,5)
abs(-10)
factorial(5)
sin(pi/2) #삼각함수
if (y > num.max){
num.max <- y
}
return (num.max)
#user-defined function
mymax <- function(x,y){
num.max <- x
if (y > num.max){
num.max <- y
}
return (num.max)
}
mymax(10,15)
a <- 10
b <- 5
c <- 8
max <- mymax(a,b)
max <- mymax(max, c)
max
a<-scan()
b <- scan()
mymax(a, b)
w <- c(1,2,3, TRUE)
w
class(w)
w <- c(1,2,3, TRUE)
class(w)
v1 <- 50:90; v1
v3 <- seq(1,101,3); v3
v4 <- seq(0.1, 1.0, 0.1); v4
v5 <- rep(1, times = 5); v5
v6 <- rep(1:5, times = 3); v6
names(score) <- c ("Young", "hoon", "KANG")
names(score)
#벡터 원소값에 이름 지정
score <- c(90,85, 70); score
names(score)
names(score) <- c ("Young", "hoon", "KANG")
names(score)
score
score[3]
score["Young"]
score[70]
score["70"]
d <- c(1,4,3,7,8)
d[1] ; d[2]; d[3]; d[4]; d[5]; d[6]
GNP <- c(2090, 2450, 960); GNP
names(GNP) <- c("Korea", "Thailand", "New Zealand"); GNP
#벡터 요소값 변경
v1 <- c(1,5,7,8,9); v1
v1[2] <-3; v1
x <- c(1,2,3)
y <- c(3,5,6)
z <- c(3,1,2)
w <- c(x,y); w
# factor-type
bt <- c('A','B','B','O','AB', 'A')
bt.new <- factor(bt)
bt
bt.new
bt[5]
bt.new[5]
levels(bt.new)
name <- c("KANG","PENG","SOO")
age <- c(40, 32, 10)
gender <- factor(c("M","N","F"))
blood.type = factor(c("O","?","A"))
person.info <- data.frame(name,age,gender,blood.type)
person.info
myfunc <- function(x,y){
val.sum <- x + y
val.mul <- x * y
return (list(sum = val.sum, mul = val.mul))
}
result <- myfunc(5,8)
s <- result$sum
m <- result$mul
cat('5 + 8 = ' , s, '\n')
cat('5 * 8 = ' , m, '\n')
#Matrix 생성
z <- matrix(1:20, nrow = 4)
z
z <- matrix(1:20, ncol = 4)
z
z <- matrix(1:20, nrow = 4, ncol = 5)
z
z <- matrix(1:20, nrow = 4, ncol = 5, byrow = T)
z
x <- 1:4
x
y <- 5:8
y
z <- matrix(1:20, nrow = 4, ncol = 5)
z
z <- matrix(1:20, nrow = 4, ncol = 5, byrow = T)
z
m1 <- cbind(x,y)
m1
m2 <- rbind(x,y)
m2
m3 <- rbind(m2,x)
m3
m4 <- cbind(z,x)
m4
#matrix에서 cell의 값 추출
z[2,3]
z[1,4]
z[2, ]
z[,4]
z[2, 1:3]
#Matrix에서 행/열에 이름 지정
score <- matrix(c(90,85,69,78,
85,96,49,95,
90,80,70,70),
nrow = 4, ncol = 3)
score
rownames(score) <- c("KANG1", "Young2", "Sonny3", "Pengsoo4")
colnames(score) <- c("English", "Thai", "German")
score
score["KANG1", "Thai"]
score["Young2", c("Thai", "German")]
score["Sonny3",]
score[, "English"]
rownames(score)
colnames(score)
colnames(score)[2]
#Data Frame 생성
city <- c("Seoul", "Tokyo", "Washington")
rank <- c(1,3,2)
city.info <- data.frame(city, rank)
city.info
name <- c("KANG","PENG","SOO")
age <- c(40, 32, 10)
gender <- factor(c("M","N","F"))
person2.info <- data.frame(name = c("KANG", "PENG","SOO"),
age = c(40,32,10),
gender = factor(c("M","N","F")),
blood.type = factor (c("O", "?","A")))
person2.info
person.info$name
person.info[person.info$name == "KANG",]
person.info[person.info$name == "KANG"] #콤마 하나 안찍으면 다르다
person.info[person.info$name == "KANG", c("name", "age")]
data()
#matrix와 data frame에서 사용하는 함수
dim(person.info) #often-used 관측치의 수와 컬럼(변수)의 수 (중요)
dim(iris)
nrow(person.info)
nrow(m3)
ncol(person.info)
ncol(m3)
head(iris) #often-used (중요)
tail(iris) #often-used(중요)
str(iris) #often-used #자료 구조 확인 (중요)
unique(iris[, 5])
table(iris[, "Species"]) #often-used 팩터타입일때ㅑ 가능. 종류별 횟수 (중요)
table(person.info[ , "blood.type"])
table(person.info[ , "gender"])
head(st)
st <- data.frame(state.x77)
str(st)
head(st)
class(st)
dim(st) #관측치50개/변수 8개
iris.m = as.matrix(iris[ , 1:4])
head(iris.m)
class(iris.m)
str(iris.m)
head(st)
Population #변수이름
attach(st) #변수이름을 직접적으로 쓸때
Population
score <- c(76,84,69,50,95,7,82,71,88,84)
which(score == 69)
which(score >=85)
#histogram: 연속형 자료의 분포를 시각화
#[연속형이라 그래프가 붙어 있음. 떨어져있는 건 막대그래프 bar chart]
#연속형 자료에서는 구간을 나누고 구간에 속한 값들의 개수를 세는 방법으로 사용
str(cars)
dist <- cars [, 2]; dist
hist (dist, main = "Histogram for 제동거리",
xlab = '제동거리', ylab = '빈도수',
border = 'yellow', col = 'navy',
las = 0, breaks = 2) #las는 축 서식 글자방향/breaks는 막대의 수
dist <- cars [, 2]; dist
#상자그림(boxplot, 상자수염그림)
#사분위수를 시각화하여 그래프 형태로 표시
#상자그림은 하나의 그래프로 데이터의 분포형태를포함한 다양한 정보를 전달
#자료의 전반적인 분포를 이해하는데 도움
#구체적인 최소/최대/중앙값을 알기는 어렵다
boxplot(cars[, 2], main ="자동차 제동거리")
boxplot.stats(cars[, 2])
