#데이터 분리
sp <- split(iris, iris$Species)
sp
mt.gear <- split(mtcars, mtcars$gear)
mt.gear
mt.gear$`3`
mt.gear$`4`
#(3) mt.gear에서 gear(기어)의 개수가 3인 그룹과 5인 그룹의 데이터를 합쳐서 mt.gear.35에 저장하고 내용을 출력하시오.
mt.gear.35 <- rbind(mt.gear$`3`, mt.gear$`5`)
mt.gear.35
#(4) mtcars 데이터셋에서 wt(중량)가 1.5~3.0 사이인 행들을 추출하여 출력하시오.
mtcars %>% filter(1.5 < mtcars$wt < 3.0)
#(4) mtcars 데이터셋에서 wt(중량)가 1.5~3.0 사이인 행들을 추출하여 출력하시오.
mtcars %>% filter(mtcars$wt < 3.0 & mtcars$wt > 1.5)
authors <- data.frame( surname = c( "Twein", "Venables", "Tierney", "Ripley", "McNeil" ),
nationality = c( "US", "Australia", "US", "UK", "Australia" ),
retired = c( "yes", rep( "no", 4 ) ) )
books <- data.frame( name = c( "Johns", "Venables", "Tierney", "Ripley", "Ripley", "McNeil" ),
title = c( "Exploratory Data Analysis",
"Modern Applied Statistics ...",
"LISP-STAT",
"Spatial Statistics", "Stochastic Simulation",
"Interactive Data Analysis" ),
other.author = c( NA, "Ripley", NA, NA, NA, NA ) )
authors;
authors; books
authors; books
authors;
books
#데이터 병합 merge
x <- data.frame(name = c("a","b","c"), #x와 y 모두 name이란 변수가 있음
mat = c(90, 80, 40))
y <- data.frame(name = c("a","b","d"),
korean = c(75,60,90))
merge(x,y) # 교집합만
merge(x,y, all.x = T) # x 기준
merge(x,y, all.y = T) # y 기준
merge(x,y, all = T) # 모두 병합
x <- data.frame(name = c("a","b","c"), #x와 y 모두 name이란 변수가 있음
mat = c(90, 80, 40))
y <- data.frame(sname = c("a","b","d"),
korean = c(75,60,90))
y <- data.frame(sname = c("a","b","d"),
korean = c(75,60,90)); x;y;
merge(x,y, by.x = c("name"),
by.y = c("sname"))
#(1) surname과 name을 공통 열로 하여 authors와 books를 병합하여 출력하시오(두 데이터프레임에서 공통 열의 값이 일치하는 것들만 병합).
merge(x=authors,y=books, by.x = c("surname"),
by.y = c("name"))
authors;
books
#(1) surname과 name을 공통 열로 하여 authors와 books를 병합하여 출력하시오(두 데이터프레임에서 공통 열의 값이 일치하는 것들만 병합).
merge(x=authors,y=books, by.x = c("surname"),
by.y = c("name"))
merge(x=authors,y=books, all.x = T,
by.x = c("surname"),
by.y = c("name"))
merge(x=authors,y=books, all.y = T,
by.x = c("surname"),
by.y = c("name"))
merge(x=authors,y=books, all = T,
by.x = c("surname"),
by.y = c("name"))
#(4) surname과 other.author를 공통 열로 하여 authors와 books를 병합하여 출력하시오.
merge(x=authors,y=other.author)
#(4) surname과 other.author를 공통 열로 하여 authors와 books를 병합하여 출력하시오.
merge(x=authors,y=other.author,
by.x = c("surname"),
by.y = c("name"))
#(4) surname과 other.author를 공통 열로 하여 authors와 books를 병합하여 출력하시오.
merge(authors,other.author,
by.x = c("surname"),
by.y = c("other.author"))
#(4) surname과 other.author를 공통 열로 하여 authors와 books를 병합하여 출력하시오.
merge(x=authors, y=other.author,
by.x = c("surname"),
by.y = c("other.author"))
#(3) surname과 name을 공통 열로 하여 authors와 books를 병합하여 출력하되 books의 행들은 모두 표시되도록 하시오.
merge(x=authors,y=books, all.y = T,
by.x = c("surname"),
by.y = c("name"))
#(4) surname과 other.author를 공통 열로 하여 authors와 books를 병합하여 출력하시오.
merge(x=authors, y=other.author, all = T,
by.x = c("surname"),
by.y = c("other.author"))
x <- data.frame(name = c("a","b","c"), #x와 y 모두 name이란 변수가 있음
mat = c(90, 80, 40))
y <- data.frame(sname = c("a","b","d"),
korean = c(75,60,90)); x;y;
merge(x,y, by.x = c("name"),
by.y = c("sname"))
authors;
books
#(4) surname과 other.author를 공통 열로 하여 authors와 books를 병합하여 출력하시오.
merge(x=authors, y=books,
by.x = c("surname"),
by.y = c("other.author"))
authors;
books
#(1) surname과 name을 공통 열로 하여 authors와 books를 병합하여 출력하시오(두 데이터프레임에서 공통 열의 값이 일치하는 것들만 병합).
merge(x=authors,y=books,
by.x = c("surname"),
by.y = c("name"))
#(2) surname과 name을 공통 열로 하여 authors와 books를 병합하여 출력하되 authors의 행들이 모두 표시되도록 하시오.
merge(x=authors,y=books, all.x = T,
by.x = c("surname"),
by.y = c("name"))
#(3) surname과 name을 공통 열로 하여 authors와 books를 병합하여 출력하되 books의 행들은 모두 표시되도록 하시오.
merge(x=authors,y=books, all.y = T,
by.x = c("surname"),
by.y = c("name"))
#(4) surname과 other.author를 공통 열로 하여 authors와 books를 병합하여 출력하시오.
merge(x=authors, y=books,
by.x = c("surname"),
by.y = c("other.author"))
usa <- data.frame(state.x77)
usa %>% arrange(Population)
#(2) state.x77 데이터셋을 Income(소득)을 기준으로 내림차순 정렬하시오.
usa %>% arrange(desc(Income))
usa %>% arrange(Illiteracy) %>%
head(10)
usa %>% arrange(Illiteracy) %>%
select(Illiteracy) %>%
head(10)
subset(usa, usa$Illiteracy)
usail <- usa[order(usa$Illiteracy, decreasing = F),]
head(usail[,"Illiteracy"], 10)
#Matrix.Dataframe 정렬
head(iris) #행번호 = 입력순서
order(iris$Sepal.Length)
iris[order(iris$Sepal.Length), ]#Ascending
iris[order(iris$Sepal.Length, decreasing = T),] #Descending
iris.new <- iris[order(iris$Sepal.Length),]
head(iris.new)
usail <- usa %>% arrange(Illiteracy)
usa %>% arrange(Illiteracy)
usa %>% arrange(Illiteracy) %>%
select(Illiteracy)
usail[c(1:10),]
usail <- usa %>% arrange(Illiteracy) %>%
select(Illiteracy)
usail[c(1:10),]
usa[c(1:10),"Illiteracy"]
usa[c(1:10),"Illiteracy"]
# usail <- usa %>% arrange(Illiteracy) %>%
#   select(Illiteracy)
usa[c(1:10),"Illiteracy"]
# usail <- usa %>% arrange(Illiteracy) %>%
#   select(Illiteracy)
usa
usa[order(usa$Illiteracy),]
head(usa[order(usa$Illiteracy),], 10)
usa[order(usa$Illiteracy),]
a <- usa[order(usa$Illiteracy),]
a
a[c(1:10),"Illiteracy"]
a[,"Illiteracy"]
head(usa[order(usa$Illiteracy),],10)
names(head(usa[order(usa$Illiteracy),],10))
names(head(usa[order(usa$Illiteracy),],10))
rownames(head(usa[order(usa$Illiteracy),],10))
head(usa[order(usa$Illiteracy),],10)
rownames(head(usa[order(usa$Illiteracy),],10))
head(usa[order(usa$Illiteracy),],10)
head(usa[order(usa$Illiteracy),],10)[,"Illiteracy"]
install.packages("ggplot2")
str(ggplot2::mpg) # :: 콜론 두 개를 스코프 scope라고 함 - library 함수로 패키지 호출 없이 데이터셋 사용
ggplot2::mpg
mpg <- data.frame(ggplot2::mpg)
dim(mpg)
str(mpg)
head(mpg)
View(mpg)
ggplot2::mpg
usa
ggplot2::mpg
#(3) Illiteracy(문맹률)가 낮은 상위 10개 주의 이름과 문맹률을 출력하시오.
rownames(head(usa[order(usa$Illiteracy),],10))
head(usa[order(usa$Illiteracy),],10)[,"Illiteracy"]
# 문2)다음과 같이 state.x77 데이터셋을 st에 저장한 후 다음 문제를 해결하기위한 R 코드를 작성하시오.
st <- data.frame(state.x77)
#(1) st의 각 변수(열)들에 대해 특이값이 존재하는지 상자그림을 그려 확인하시오.
boxplot(st)
#(2) 특이값이 존재하는 경우 이상치를 NA로 대체하여 저장하시오.
for (i in 1:ncol(st)){
out.val <- boxplot.stats(st[,i])$out
st[,i][st[,i] %in% out.val] <- NA
}
#(3) st에서 NA가 존재하는 행들을 제거하여 st2에 저장하시오.
st2 <- st[complete.cases(st),]
boxplot(st2)
s <- state.x77
ds[2,3] <- NA; ds[3,1] <- NA; ds[2,4] <- NA; ds[4,3] <- NA
#(1) 각 열별로 결측값이 몇 개인지 출력하시오.
ds_na <- function(y){
return (sum(is.na(y)))
}
na_count <- apply(ds,2,ds_na)
na_count
#(2) 결측값이 포함된 행들의 데이터를 출력하시오.
ds[ !complete.cases(ds),]
ds <- state.x77
ds[2,3] <- NA; ds[3,1] <- NA; ds[2,4] <- NA; ds[4,3] <- NA
#(1) 각 열별로 결측값이 몇 개인지 출력하시오.
ds_na <- function(y){
return (sum(is.na(y)))
}
na_count <- apply(ds,2,ds_na)
na_count
#(2) 결측값이 포함된 행들의 데이터를 출력하시오.
ds[ !complete.cases(ds),]
#(3) 결측값이 포함된 행은 몇 개인지 출
#(3) Illiteracy(문맹률)가 낮은 상위 10개 주의 이름과 문맹률을 출력하시오.
rownames(head(usa[order(usa$Illiteracy),],10))
#(1) state.x77 데이터셋을 Population(인구수)를 기준으로 오름차순 정렬하시오.
library(dplyr)
usa <- data.frame(state.x77)
usa %>% arrange(Population)
#(2) state.x77 데이터셋을 Income(소득)을 기준으로 내림차순 정렬하시오.
usa %>% arrange(desc(Income))
#(3) Illiteracy(문맹률)가 낮은 상위 10개 주의 이름과 문맹률을 출력하시오.
rownames(head(usa[order(usa$Illiteracy),],10))
head(usa[order(usa$Illiteracy),],10)[,"Illiteracy"]
usa[order(usa$Illiteracy),]
# 2016-2018 연간 도내 전통시장 매출액과 카드 이용자수 및 입도관광객
library(rJava)
library(xlsx)
setwd ("C:/GitHub/BM_YounghoonKANG_R/PP/EXTRACTED")
jeju_market <- read.xlsx("제주전통시장 연도별 일간매출액-일간방문자수-제주관광객수.xlsx", sheetIndex = 1, encoding = 'UTF-8')
jeju_market #일간평균매출액(*10000원)/일간평균방문자수/일간입도관광객/연간입도관광객
is.na(jeju_market[,4]) #결측치 없다
boxplot(jeju_market[,4])
par(mfrow=c(1,3)) #각각 상자그림
for (i in 2:4) {
boxplot(jeju_market [,i],
main = colnames(jeju_market)[i])
}
visitors_group <- read.csv("도민,내국인관광객,중국인관광객 전통시장 카드 이용수.csv",
header = T)
visitors_group
str( visitors_group )
plot(month, visitors_group$visitors.all, main = "전통시장 방문객의 카드 이용 횟수",
type="l", col="red", lty=1,
xlab = "2016년 12월~2017년 11월", ylab = "카드 결제 횟수")
plot(month, visitors_group$travelers, main = "입도한 관광객 수",
type="l", col="blue", las=1,
xlab = "2016년 12월~2017년 11월", ylab = "입도관광객 수")
# 월별 2016.12~2017.11 도민/내국인/중국인/토탈 전통시장 카드이용자수/월간입도관광객
month <- 1:12
visitors_group <- read.csv("도민,내국인관광객,중국인관광객 전통시장 카드 이용수.csv",
header = T)
visitors_group
str( visitors_group )
plot(month, visitors_group$visitors.all, main = "전통시장 방문객의 카드 이용 횟수",
type="l", col="red", lty=1,
xlab = "2016년 12월~2017년 11월", ylab = "카드 결제 횟수")
plot(month, visitors_group$travelers, main = "입도한 관광객 수",
type="l", col="blue", las=1,
xlab = "2016년 12월~2017년 11월", ylab = "입도관광객 수")
plot(visitors.all~travelers, data = visitors_group) #산점도
visitors_group
pairs(visitors_group)
par(mfrow=c(1,2)) #각각 상자그림
for (i in 5:6) {
boxplot(visitors_group [,i], #전통시장 방문객과 입도관광객의 상자그림
main = colnames(visitors_group)[i])
}
rowSums(is.na(visitors_group)) #결측치 하나도 없음음
cor(visitors_group[, c(5,6)])
par(mfrow=c(1,1))
# 입도객 X 전통시장 카드 이용자수 [월간 2016.12~2017.11]
visitors_group
plot(visitors_group$visitors.all~visitors_group$travelers,
main = "월간 입도객별 전통시장 카드 이용자수",
xlab="월간 입도객(2016.12~2017.11)",
ylab="월간 전통시장 카드이용자수",
col = 4, pch = 16)
# 입도객 X 전통시장 매출액 [연간 2016~2018]
inbound_year <- read.xlsx("연간제주관광입도객2012-2018.xlsx", sheetIndex = 1, encoding = 'UTF-8')
inbound_year
jeju_market
# 입도객 X 전통시장 카드 이용자수 [월간 2016.12~2017.11]
visitors_group
pie(visitors_group[, 2:4]
pie(visitors_group[, 2:4])
pie(visitors_group[, c(2:4)])
pie(visitors_group[, c(2,4)])
localt <- colSums(visitors_group[,2])
localt <- mean(visitors_group[,2])
visitors_group[,2]
localt <- mean(visitors_group[,2])
localt
koreant <- mean(visitors_group[,3])
koreant
chinest
chineset <- mean(visitors_group[,4])
chineset
visitors_pie <- c(localt,koreant,chinest)
visitors_pie <- c(localt, koreant,chineset)
pie(visitors_pie)
pie(visitors_pie, main = ("도내 전통시장 카드 거래 이용자 "),
col = c('skyblue','blue','red')
)
pie(visitors_pie, main = ("도내 전통시장 카드 거래 이용자 비율"),
col = c('skyblue','blue','red'),
lbls <- c('도민','내국인관광객','중국인관광객')
)
pie(visitors_pie, main = ("도내 전통시장 카드 거래 이용자 비율"),
col = c('skyblue','blue','red'),
labels <- c('도민','내국인관광객','중국인관광객'),
)
pie(visitors_pie, main = ("도내 전통시장 카드 거래 이용자 비율"),
col = c('skyblue','blue','red'),
labels <- lbls,
)
visitors_pie <- c(localt, koreant,chineset)
lbls <- c('도민','내국인관광객','중국인관광객')
pct <- round(visitors_pie/sum(visitors_pie)*100)
lbls <- paste(lbls, pct) #add percents to lables
lbls <- paste(lbls, "%", sep='')
pie(visitors_pie, main = ("도내 전통시장 카드 거래 이용자 비율"),
col = c('skyblue','blue','red'),
labels <- lbls,
)
pie(visitors_pie, main = ("도내 전통시장 카드 거래 이용자 비율"),
col = c('skyblue','blue','red'),
labels <- lbls,
radius = 10
)
pie(visitors_pie, main = ("도내 전통시장 카드 거래 이용자 비율"),
col = c('skyblue','blue','red'),
labels <- lbls,
radius = 2
)
pie(visitors_pie, main = ("도내 전통시장 카드 거래 이용자 비율"),
col = c('skyblue','blue','red'),
labels <- lbls,
radius = 3
)
pie(visitors_pie, main = ("도내 전통시장 카드 거래 이용자 비율"),
col = c('skyblue','blue','red'),
labels <- lbls,
radius = 2.5
)
pct <- round(visitors_pie/sum(visitors_pie)*100, 2)
lbls <- paste(lbls, pct) #add percents to lables
lbls <- paste(lbls, "%", sep='')
pie(visitors_pie, main = ("도내 전통시장 카드 거래 이용자 비율"),
col = c('skyblue','blue','red'),
labels <- lbls,
radius = 2.5
)
# 입도객 X 전통시장 카드 이용자수 [월간 2016.12~2017.11]
visitors_group
visitors_pie <- c(localt, koreant,chineset)
lbls <- c('도민','내국인관광객','중국인관광객')
pct <- round(visitors_pie/sum(visitors_pie)*100, 2)
lbls <- paste(lbls, pct) #add percents to lables
lbls <- paste(lbls, "%", sep='')
pie(visitors_pie, main = ("도내 전통시장 카드 거래 이용자 비율"),
col = c('skyblue','blue','red'),
labels <- lbls,
radius = 2.5
)
pie(visitors_pie, main = ("도내 전통시장 카드 거래 이용자 비율"),
col = c('skyblue','blue','red'),
labels <- lbls,
radius = 2.5 )
# 입도객 X 전통시장 카드 이용자수 [월간 2016.12~2017.11]
visitors_group
pie(visitors_pie, main = ("도내 전통시장 카드 거래 이용자 비율"),
col = c('skyblue','blue','red'),
labels <- lbls,
radius = 2.5 ) # 카드 거래 이용자수 비율 파이 차트
barplot(visitors_group)
barplot(visitors_group$visitors.all)
plot(visitors_group$visitors.all,
main = "월간 전통시장 카드 거래 이용자수",
xlab = '2016.12 ~ 201')
plot(visitors_group$visitors.all,
main = "월간 전통시장 카드 거래 이용자수",
xlab = '2016.12 ~ 2017.11',
ylab = "카드 거래 이용자수",
)
plot(visitors_group$visitors.all,
main = "월간 전통시장 카드 거래 이용자수",
xlab = '2016.12 ~ 2017.11',
ylab = "카드 거래 이용자수",
type = 'l')
plot(visitors_group$visitors.all,
main = "월간 전통시장 카드 거래 이용자수",
xlab = '2016.12 ~ 2017.11',
ylab = "카드 거래 이용자수",
type = 'l', col = 'blue')
plot(visitors_group$visitors.all,
main = "월간 전통시장 카드 거래 이용자수",
xlab = '2016.12 ~ 2017.11', xlim=c(1,30000)
ylab = "카드 거래 이용자수",
type = 'l', col = 'blue')
plot(visitors_group$visitors.all,
main = "월간 전통시장 카드 거래 이용자수",
xlab = '2016.12 ~ 2017.11', xlim=c(1,30000),
ylab = "카드 거래 이용자수",
type = 'l', col = 'blue')
plot(visitors_group$visitors.all,
main = "월간 전통시장 카드 거래 이용자수",
xlab = '2016.12 ~ 2017.11', ylim=c(1,30000),
ylab = "카드 거래 이용자수",
type = 'l', col = 'blue')
plot(visitors_group$visitors.all,
main = "월간 전통시장 카드 거래 이용자수",
xlab = '2016.12 ~ 2017.11', ylim=c(10000,30000),
ylab = "카드 거래 이용자수",
type = 'l', col = 'blue')
jeju_market #일간평균매출액(*10000원)/일간평균방문자수/일간입도관광객/연간입도관광객
# 입도객 X 전통시장 매출액 [연간 2016~2018]
inbound_year <- read.xlsx("연간제주관광입도객2012-2018.xlsx", sheetIndex = 1, encoding = 'UTF-8')
inbound_year
plot(inbound_year)
plot(inbound_year,
main = "연간 관광입도객 추이",
col = "purple",
)
plot(inbound_year,
main = "연간 관광입도객 추이",
col = "purple",
type = 'l',
xlab = '연도',
ylab = '입도 관광객 수', ylim = c(5000000,2000000))
plot(inbound_year,
main = "연간 관광입도객 추이",
col = "purple",
type = 'l',
xlab = '연도',
ylab = '입도 관광객 수', ylim = c(500000,2000000))
plot(inbound_year,
main = "연간 관광입도객 추이",
col = "purple",
type = 'l',
xlab = '연도',
ylab = '입도 관광객 수', ylim = c(500000,200000))
plot(inbound_year,
main = "연간 관광입도객 추이",
col = "purple",
type = 'l',
xlab = '연도',
ylab = '입도 관광객 수', ylim = c())
inbound_year
plot(inbound_year,
main = "연간 관광입도객 추이",
col = "purple",
type = 'l',
xlab = '연도',
ylab = '입도 관광객 수', ylim = c(7091703,16852980))
class(inbound_year)
plot(inbound_year,
main = "연간 관광입도객 추이",
col = "purple",
type = 'l',
xlab = '연도',
ylab = '입도 관광객 수', ylim = c(7091703,16852980))
plot(inbound_year,
main = "연간 관광입도객 추이",
col = "purple",
type = 'l',
xlab = '연도',
ylab = '입도 관광객 수', ylim = c(7000000,16852980))
plot(inbound_year,
main = "연간 관광입도객 추이",
col = "purple",
type = 'l',
xlab = '연도',
ylab = '입도 관광객 수', ylim = c(7000000,17000000))
plot(month, naver[,2], type='l', col='green', ylim=c(0, 100))
# 네이버 제주 시장 검색량 X 전통시장 신용카드 이용횟수
setwd ("C:/GitHub/BM_YounghoonKANG_R/PP/EXTRACTED")
naver <- read.xlsx("네이버 제주도 시장 검색량 201612-201711.xlsx", sheetIndex = 1, encoding = 'UTF-8')
naver
naver[,2]
plot(month, naver[,2], type='l', col='green', ylim=c(0, 100))
plot(month, naver[,2], type='l', col='green', ylim=c(0, 100),
xlab = "월", ylab = '검색량 지수(최대치 = 100)'))
plot(month, naver[,2], type='l', col='green', ylim=c(0, 100),
xlab = "월", ylab = '검색량 지수(최대치 = 100)')
plot(month, naver[,2], main = '네이버 (전통시장관련)키워드 검색량'
type='l', col='green', ylim=c(0, 100),
xlab = "월", ylab = '검색량 지수(최대치 = 100)')
plot(month, naver[,2], main = '네이버 (전통시장관련)키워드 검색량',
type='l', col='green', ylim=c(0, 100),
xlab = "월", ylab = '검색량 지수(최대치 = 100)')
plot(month, naver[,2], main = '네이버 - 전통시장관련 키워드 검색량',
type='l', col='green', ylim=c(0, 100),
xlab = "월", ylab = '검색량 지수(최대치 = 100)')
plot(month, naver[,2], main = '네이버 - 전통시장 관련 키워드 검색량',
type='l', col='green', ylim=c(0, 100),
xlab = "월", ylab = '검색량 지수(최대치 = 100)')
plot(month, naver[,2], main = '네이버 - 전통시장 관련 키워드 검색량',
sub = '2016년 12월 ~ 2017년 11월'
type='l', col='green', ylim=c(0, 100),
xlab = "월", ylab = '검색량 지수(최대치 = 100)')
plot(month, naver[,2], main = '네이버 - 전통시장 관련 키워드 검색량',
sub = '2016년 12월 ~ 2017년 11월',
type='l', col='green', ylim=c(0, 100),
xlab = "월", ylab = '검색량 지수(최대치 = 100)')
plot(month, naver[,2], main = '네이버 - 전통시장 관련 키워드 검색량',
sub = '2016년 12월 ~ 2017년 11월 기준준',
type='l', col='green', ylim=c(0, 100),
xlab = "월", ylab = '검색량 지수(최대치 = 100)')
plot(month, naver[,2], main = '네이버 - 도내 전통시장 관련 키워드 검색량',
sub = '2016년 12월 ~ 2017년 11월 기준',
type='l', col='green', ylim=c(0, 100),
xlab = "월", ylab = '검색량 지수(최대치 = 100)')
